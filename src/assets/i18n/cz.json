{
	"promenna": {
		"header": "Zadání",
		"vlozit": "Vložit novou proměnnou",
		"smazat": "Odstranit proměnnou",
		"smazatVse": "Odstranit všechny proměnné",
		"import": "Importovat zadání",
		"export": "Exportovat zadání",
		"zakazat": "Vyjmout proměnnou dočasně ze zadání",
		"povolit": "Zahrnout proměnnu zpět do zadání",
		"omezeni": "Upravit omezení proměnné",
		"validace": {
			"pattern": "Povolena jsou celá čísla oddělená čárkou"
		}
	},
	"provedeni": {
		"header": "Provedení",
		"pocet": "Počet řešení",
		"pocetPlaceholder": "Neomezeno",
		"algoritmus": "Algoritmus",
		"iConsistency": "iConsistency",
		"spust": "Spusť",
		"typ": {
			"backtracking": "Backtracking",
			"backjumping": "Backjumping",
			"forwardCheck": "Forward Check",
			"arcConsistency": "Arc Consistency",
			"random": "Random",
			"dynamicOrder": "DynamicOrder",
			"iConsistency": "iConsistency",
			"fcdvo": "forward Check + DynamicOrder"
		}
	},
	"omezeni": {
		"header": "Omezení proměnné {{nazev}}",
		"validace": {
			"required": "Hodnota je povinná",
			"dvojice": "Je možné zadat pouze dvojice celých čísel oddělené mezerou"
		},
		"prazdne": "Proměnná nemá žádné omezení. Přidejte jej níže.",
		"typPlaceholder": "Typ",
		"cilPlaceholder": "Cíl",
		"pridat": "Přidat",
		"ulozit": "Uložit",
		"vratit": "Vrátit",
		"zrusit": "Zrušit",
		"smaz": "Odstranit omezení",
		"vyber": "Vybrat proměnné",
		"typ": {
			"<": "<",
			">": ">",
			"=": "=",
			"!": "!",
			"p": "p",
			"z": "z"
		}
	},
	"algoritmus": {
		"zavrit": "Zavřít",
		"definice": "Zobrazit porobnosti o algoritmu"
	},
	"graf": {
		"popisDomeny": "Domény proměnných",
		"navod": {
			"1": "Definujte proměnné a jejich omezení.",
			"2": "Vyberte algoritmus.",
			"3": "Spusťte výpočet."
		},
		"zoomin": "Přiblížit",
		"center": "Zobrazit celý graf",
		"zoomout": "Oddálit",
		"navigace": {
			"zacatek": "Začátek",
			"konec": "Konec",
			"dalsi": "Další krok",
			"dalsiUzel": "Další přiřazení",
			"dalsiReseni": "Další řešení",
			"predchozi": "Předchozí krok",
			"predchoziUzel": "Předchozí přiřazení",
			"predchoziReseni": "Předchozí řešení"
		},
		"domena": {
			"zobraz": "Zobraz doménu",
			"skryj": "Skryj doménu"
		}
	},
	"popis": {
		"start": "Start",
		"backtracking": {
			"nazev": "Backtracking",
			"definice": "TODO: Napsat definici algoritmu Backtracking. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Backtracking.",
			"prirazeni": "Vybírám první volnou hodnotu z domény proměnné {{nazev}} = {{hodnota}}.\n",
			"kontrolaOmezeni": "Začíná kontrola jestli jsou splněna všechna omezení.\n",
			"pokracovaniPrirazeni": "Jelikož bylo porušeno omezení, ale ještě existují nepřiřazené prvky doménu, přiřazují další prvek z domény.\n",
			"uzel": "Tato hodnota neporušuje žádné omezení, proto pokračuji dopřednou fází k další proměnné.\n",
			"deadend": "Jelikož je porušeno omezení započne zpětná fáze, při které se přejde na předchozí proměnnou.\n",
			"reseni": "Jelikož jsou všechna omezení splněna a všechny proměnné mají přiřazenou hodnotu jedná se o řešení.\n",
			"konec": "Byly nastaveny všechny možné kombinace přiřazení prvků, které splňují omezení a další přiřazení není možné. Ukončuji výpočet."
		},
		"backjumping": {
			"nazev": "Backjumping",
			"definice": "TODO: Napsat definici algoritmu Backtracking. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Backjumping.",
			"kontrolaOmezeni": "Začíná kontrola jestli jsou splněna všechna omezení.\n",
			"prirazeni": "Vybírám první volnou hodnotu z domény proměnné {{nazev}} = {{hodnota}}.\n",
			"pokracovaniPrirazeni": "Jelikož bylo porušeno omezení, ale ještě existují nepřiřazené prvky doménu, přiřazují další prvek z domény.\n",
			"uzel": "Tato hodnota neporušuje žádné omezení, proto pokračuji dopřednou fází k další proměnné.\n",
			"deadend": "Jelikož je porušeno omezení započne zpětná fáze.\n",
			"reseni": "Jelikož jsou všechna omezení splněna a všechny proměnné mají přiřazenou hodnotu jedná se o řešení.\n",
			"jestliBackjumpu": "Začíná zjišťování jestli je možné provést backjump.\n",
			"backjumpNe": "Jelikož proměnná není listové uváznutí provede se skok na předchozí proměnnou.\n",
			"backjumpAno": "Jelikož proměnná je listové uváznutí je možné provést backjump. Vyhledávání proměnné na kterou se má backjump provést.\n",
			"backjumpNeniOmezeni": "Jelikož proměnná nemá žádné omezení provede se skok na předchozí proměnnou.\n",
			"backjumpNalezenaPromenna":"Proměnná, na kterou se provede backjump je proměnná {{nazev}}, jelikož tato proměnná má omezení se zpracovávanou proměnnou a byla naposled přiřazena.",
			"backjumpNastaveniPozic":"Provede se backjump na proměnnou {{nazev}} a všem proměnným přiřazeným po proměnné {{nazev}} se nastaví všechny prvky domén na volné.\n",
			"konec": "Byly nastaveny všechny možné kombinace přiřazení prvků, které splňují omezení a další přiřazení není možné. Ukončuji výpočet."

		},
		"forwardCheck": {
			"nazev": "Forward checking",
			"definice": "TODO: Napsat definici algoritmu Backtracking. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Forward checking.",
			"kontrolaOmezeni": "Začíná kontrola jestli jsou splněna všechna omezení.\n",
			"prirazeni": "Vybírám první volnou hodnotu z domény proměnné {{nazev}} = {{hodnota}}.\n",
			"pokracovaniPrirazeni": "Jelikož bylo porušeno omezení, ale ještě existují nepřiřazené prvky doménu, přiřazují další prvek z domény.\n",
			"splneniOmezeni": "Jsou splěna všechna omezení. Začínám forward check, jestli se mohou odstanit prvky z následujících domén.\n",
			"uzel": "Odstranili se všechny prvky, které nesplňovali omezení pro současné přiřazení.\n Začíná dopředná fáze k další proměnné.\n",
			"prazdnaDomena": "Po odebrání prvku se doména proměnné {{porovnavanaPromenna}} stala prázdnou a tudíž pro dané přiřazení neexistuje řešení.\n",
			"deadend": "Jelikož je porušeno omezení započne zpětná fáze, při které se přejde na předchozí proměnnou.\n",
			"reseni": "Jelikož jsou všechna omezení splněna a všechny proměnné mají přiřazenou hodnotu jedná se o řešení.\n",
			"nesplneno": "Omezení typu proměnné {{nazev}} {{typOmezeni}} {{porovnavanaPromenna}} ({{hodnota}} {{typOmezeni}} {{porovnavanaHodnota}}).\nHodnota {{porovnavanaHodnota}} se odstraňuje z domény proměnné {{porovnavanaPromenna}}.\n",
			"povolenoNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se nenašla povolená dvojice s hodnotami {{hodnota}},{{porovnavanaHodnota}}.\nHodnota {{porovnavanaHodnota}} se odstraňuje z domény proměnné {{porovnavanaPromenna}}.\n",
			"zakazaneNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se našla zakázáná dvojice s hodnotami {{hodnota}},{{porovnavanaHodnota}}.\nHodnota {{porovnavanaHodnota}} se odstraňuje z domény proměnné {{porovnavanaPromenna}}.\n",
			"konec": "Byly nastaveny všechny možné kombinace přiřazení prvků, které splňují omezení a další přiřazení není možné. Ukončuji výpočet."

		},
		"arcConsistency": {
			"nazev": "Arc consistency",
			"definice": "TODO: Napsat definici algoritmu Arc consistency. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Arc consistency.\n",
			"zacatekUpravy": "Zkoumání, jestli se dají odstranit prvky z domén proměnných.\n",
			"kteraPromenna": "Upravuji doménu proměnné {{nazev}}.\n",
			"nesplneno": "V doméně proměnné {{porovnavanaPromenna}} neexistuje prvek, který by splňoval omezení {{nazev}} {{typOmezeni}} {{porovnavanaPromenna}} pro hodnotu {{hodnota}} z proměnné {{nazev}}. Odstraňuji hodnota {{hodnota}} z proměnné {{nazev}}.\n",
			"povolenoNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se nenašla povolená dvojice pro hodnotu {{hodnota}} z proměnné {{nazev}}.\n Odstraňuji hodnota {{hodnota}} z proměnné {{nazev}}.\n",
			"zakazaneNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se našla zakázaná dvojice pro hodnotu {{hodnota}} z proměnné {{nazev}}.\n Odstraňuji hodnota {{hodnota}} z proměnné {{nazev}}.\n",
			"upravaDomeny": "U proměnné {{nazev}} se odebral prvek {{hodnota}} z domény, jelikož v proměnné {{porovnavanaPromenna}} neexistuje prvek v doméně, který by splňoval omezení {{nazev}} {{typ}} {{porovnavanaPromenna}}.\n",
			"prazdnaDomena": "U proměnné {{nazev}} vznikla prázdná doména, tudíž pro tento problém neexistuje řešení.\n"
		},
		"random": {
			"nazev": "Random backtracking",
			"definice": "TODO: Napsat definici algoritmu Backtracking. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Random backtracking.",
			"kontrolaOmezeni": "Začíná kontrola jestli jsou splněna všechna omezení.\n",
			"pokracovaniPrirazeni": "Jelikož bylo porušeno omezení, ale ještě existují nepřiřazené prvky doménu, přiřazují další prvek z domény.\n",
			"prirazeni": "Vybírám náhodnou hodnotu z domény proměnné {{nazev}} = {{hodnota}}.\n",
			"uzel": "Tato hodnota neporušuje žádné omezení, proto pokračuji dopřednou fází k další proměnné.\n",
			"deadend": "Jelikož je porušeno omezení započne zpětná fáze, při které se přejde na předchozí proměnnou.\n",
			"reseni": "Jelikož jsou všechna omezení splněna a všechny proměnné mají přiřazenou hodnotu jedná se o řešení.\n",
			"konec": "Byly nastaveny všechny možné kombinace přiřazení prvků, které splňují omezení a další přiřazení není možné. Ukončuji výpočet."
		},
		"dynamicOrder": {
			"nazev": "Dynamic value ordering",
			"definice": "TODO: Napsat definici algoritmu Backtracking. Muzes pouzit HTML!!",
			"start": "Byl spuštěn algoritmus Dynamic order.",
			"prirazeni": "Vybírám první volnou hodnotu z domény proměnné {{nazev}} = {{hodnota}}.\n",
			"kontrolaOmezeni": "Začíná kontrola jestli jsou splněna všechna omezení.\n",
			"pokracovaniPrirazeni": "Jelikož bylo porušeno omezení, ale ještě existují nepřiřazené prvky doménu, přiřazují další prvek z domény.\n",
			"uzel": "Tato hodnota neporušuje žádné omezení, proto pokračuji dopřednou fází k další proměnné.\n",
			"deadend": "Jelikož je porušeno omezení započne zpětná fáze, při které se přejde na předchozí proměnnou.\n",
			"reseni": "Jelikož jsou všechna omezení splněna a všechny proměnné mají přiřazenou hodnotu jedná se o řešení.\n",
			"poradiPred": "Seznam proměnných před uspořádáním:\n",
			"zacinamSerazovat": "Začínám seřazovat pořadí proměnných podle jejich délky od nejměnší po největší.\n",
			"poradiPo": "Seznam proměnných po uspořádáním:\n",
			"poradiInfo": "Proměnna {{nazev}} s délkou domény = {{delka}}.\n"
		},
		"omezeni": {
			"splneno": "Omezení typu proměnné {{nazev}} {{typOmezeni}} {{porovnavanaPromenna}} ({{hodnota}} {{typOmezeni}} {{porovnavanaHodnota}}) je splněno.\n",
			"nesplneno": "Omezení typu proměnné {{nazev}} {{typOmezeni}} {{porovnavanaPromenna}} ({{hodnota}} {{typOmezeni}} {{porovnavanaHodnota}}) není splněno.\n",
			"povolenoSplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se našla povolená dvojice s hodnotami {{nazev}},{{porovnavanaPromenna}} ({{hodnota}},{{porovnavanaHodnota}}).\n",
			"povolenoNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se nenašla povolená dvojice s hodnotami {{nazev}},{{porovnavanaPromenna}} ({{hodnota}},{{porovnavanaHodnota}}).\n",
			"zakazeneSplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se nenašla zakázáná dvojice s hodnotami {{nazev}},{{porovnavanaPromenna}} ({{hodnota}},{{porovnavanaHodnota}}).\n",
			"zakazaneNesplneno": "Mezi proměnnou {{nazev}} a proměnnou {{porovnavanaPromenna}} se našla zakázáná dvojice s hodnotami {{nazev}},{{porovnavanaPromenna}} ({{hodnota}},{{porovnavanaHodnota}}).\n"
		},
		"iConsistency": {
			"nazev": "iConsistency",
			"definice": "TODO: Napsat definici algoritmu iConsistency",
			"start": "Byl spuštěn algoritmus iConsistency.",
			"nedostacujiciPocet": "Bylo nalezeno pouze {{pocetUspesnychPromennych}} z požadovaných {{iPocet}}. Odebírám prvek {{prvek}} z domény proměnné {{nazev}}.\n",
			"prazdnaDomena": "U proměnné {{nazev}} vznikla prázdná doména, tudíž pro tento problém neexistuje řešení.\n"
		},
		"forwarCheckDynamicOrder": {
			"nazev": "Forward checking + DVO",
			"definice": "TODO: Napsat definici algoritmu iConsistency",
			"start": "Byl spuštěn algoritmus Forward checking v kombinaci s Dynamic value ordering."
		}
	},
	"promennePanel": {
		"empty": "Vložte novou proměnnou kliknutím na + výše"
	},
	"import": {
		"header": "Import zadání",
		"zavrit": "Zrušit",
		"priklad": {
			"label": "Importovat příklad",
			"placeholder": "Vybrat příklad",
			"akce": "Importovat"
		},
		"soubor": {
			"label": "Importovat ze souboru",
			"vybrat": "Vybrat soubor"
		}
	},
	"confirm": {
		"header": "Odstranit",
		"accept": "Ano",
		"reject": "Ne",
		"promenna": "Opravdu chcete odstranit proměnnou?",
		"promenne": "Opravdu chcete odstranit seznam proměnných?"
	}
}

